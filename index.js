// Generated by LiveScript 1.4.0
(function(){
  var Github, github, user, p, beautify, md, fs;
  Github = require('github-api');
  github = new Github({
    token: 'f05bc5' + '885f17' + 'f05d98' + '4ec5f2' + '2e71d663e' + 'f52d2d7',
    auth: 'oauth'
  });
  user = github.getUser();
  p = require('prelude-ls');
  beautify = require('js-beautify').js_beautify;
  md = require('node-markdown').Markdown;
  fs = require('fs');
  require('sync')(function(){
    var gists, transform, apply;
    gists = user.userGists.sync(null, 'askucher');
    transform = function(box){
      return {
        name: box.name,
        files: p.map(function(it){
          return it[1].content;
        })(
        p.objToPairs(
        box.gist.read.sync(null).files))
      };
    };
    apply = function(gist){
      var json;
      json = JSON.stringify({
        name: gist.name,
        files: gist.files.map(md)
      }, null, 4);
      return fs.writeFileSync(process.cwd() + "/node_modules/nixar/docs/" + gist.name + ".js", beautify("module.exports = function(repo) { repo.docs.push(" + json + "); }", {
        indent_size: 2
      }), 'utf8');
    };
    return gists.filter(function(it){
      return it.description.indexOf('nixar') > -1;
    }).map(function(it){
      return {
        name: it.description.split('.')[1],
        id: it.id
      };
    }).map(function(it){
      return {
        gist: github.getGist(it.id),
        name: it.name
      };
    }).map(transform).forEach(apply);
  });
}).call(this);
